booktabs = TRUE,
row.names = FALSE,
format = "markdown",
position = "center")
PerCountry <- Alltogether %>%
group_by(Country.Region, name) %>%
summarise(Confirmed = sum(Confirmed),
Deaths = sum(Deaths),
Recovered = sum(Recovered))
PerCountry <- PerCountry %>%
ungroup(Country.Region) %>%
mutate(Country.Region = as.character(Country.Region))
#Correct a few country names
PerCountry$Country.Region[PerCountry$Country.Region == "US"] <- "United States"
PerCountry$Country.Region[PerCountry$Country.Region == "Czechia"] <- "Czech Republic"
firstday <- PerCountry %>%
group_by(Country.Region) %>%
filter(Confirmed > 0) %>%
mutate(firstday = min(name)) %>%
select(Country.Region, firstday) %>%
distinct()
PerCountry <- merge(PerCountry, firstday)
PerCountry <- PerCountry %>%
mutate(sincefirstday = name - firstday)
day100 <- PerCountry %>%
group_by(Country.Region) %>%
filter(Confirmed > 99) %>%
mutate(daymore100 = min(name)) %>%
select(Country.Region, daymore100) %>%
distinct()
PerCountry <- left_join(PerCountry, day100)
PerCountry <- PerCountry %>%
mutate(sincehunday = name - daymore100)
Europe <- readOGR(layer = "NUTS_RG_03M_2016_3035_LEVL_0",
dsn = "../Data")
countrycodes <- read.csv("../Data/list-eurostat-eea-and-fao-country-codes-side-by-side.csv")
countrycodes <- countrycodes[1:38,c(1,6)]
Europe <- sp::merge(Europe, countrycodes,
by.x = "CNTR_CODE",
by.y = "estatcode.text")
EuropeCorona <- PerCountry %>%
filter(Country.Region %in% countrycodes$name.text) %>%
filter(name == Sys.Date() -1)
Europe <- sp::merge(Europe, EuropeCorona,
by.x = "name.text",
by.y = "Country.Region")
m1 <- qtm(Europe,
fill = "Confirmed",
fill.palette = "viridis",
fill.breaks = c(0,1, 10,100,1000,2000,5000, 10000, Inf))
tmap_leaflet(m1)
library(readxl)
library(rvest)
library(tidyverse)
library(fuzzyjoin)
library(magrittr)
library(leaflet)
library(lubridate)
library(glogis)
library(gridExtra)
library(kableExtra)
x <- c("ggmap", "rgdal", "rgeos", "maptools", "tmap")
lapply(x, library, character.only = TRUE)
#Ici, il faut choisir la data à laquelle on va construire la carte.
datum <- as.Date("2020-03-17")
#Importer les données françaises via cet URL:
France <- read.csv("https://www.data.gouv.fr/fr/datasets/r/fa9b8fc8-35d5-4e24-90eb-9abe586b0fa5",header = TRUE, check.names = F)
France <- France %>%
pivot_longer(2:ncol(France),
names_to = "departement",
values_to = "montant") %>%
mutate(Date = ymd(Date))
write.csv(France, "../Data/France.csv")
Belgium <- read_html("https://en.wikipedia.org/wiki/2020_coronavirus_pandemic_in_Belgium") %>%
html_nodes(".wikitable") %>%
html_table(fill = TRUE) %>%
data.frame() %>%
select(1,3,5,7)
a <- as.numeric(nrow(Belgium))
Belgium <- Belgium[-c(1,(a),(a-1)),] %>%
mutate(Date = ymd(Date))
colnames(Belgium) <- c("Date", "BE2", "BE1", "BE3")
Belgium <- Belgium %>%
pivot_longer(2:4, names_to = "NUTS_CODE", values_to = "montant")
write.csv(Belgium, "../Data/Belgique.csv")
Netherlands <- read_html("https://www.rivm.nl/coronavirus-kaart-van-nederland") %>%
html_nodes("#csvData") %>%
html_text() %>%
read_lines() %>%
str_split(";") %>%
unlist()
Netherlands <- Netherlands[-1] %>%
matrix(ncol = 5, byrow = TRUE)
Netherlands <- Netherlands[-(1:2),] %>%
as.data.frame()
date <- read_html("https://www.rivm.nl/coronavirus-kaart-van-nederland") %>%
html_nodes('.with-background > p:nth-child(2)') %>%
html_text() %>%
str_extract("[0-9]{2}\\s[a-z]{1,}\\s[0-9]{4}")
colnames(Netherlands) <- c("numero", "municipalite", "montant", "habitants", "montantparhabitant")
View(Netherlands)
Netherlands <- data.frame(Netherlands, Date = date) %>%
filter(municipalite != "")
write.csv(Netherlands, file = paste("../Data/","netherlands_",date,".csv", sep = ""))
files <- list.files("../Data")
files <- files[grepl("netherlands(.+)", files)]
key <- NULL
Netherlands <- NULL
for (i in files) {
key <- read.csv(paste("../Data/",files, sep = "")) %>%
select(-1)
Netherlands <- rbind(Netherlands, key)
}
View(Netherlands)
Before <- read_excel("../Data/corona_04032020tm16032020.xlsx", sheet = 2)
Before <- Before[!is.na(Before$Gemnr),] %>%
pivot_longer(3:ncol(Before), names_to = "Date", values_to = "montant") %>%
mutate(Date = dmy(str_replace(Date, "Aantal", "")))
colnames(Before) <- c("numero", "municipalite", "Date", "montant")
#Municipalites par province
municipalites <- read_html("https://www.metatopos.eu/Gemtab.php") %>%
html_nodes("section.dikkerand:nth-child(3) > article:nth-child(1) > table:nth-child(2)") %>%
html_table(fill = TRUE, header = TRUE) %>%
data.frame()
#municipalites par nl1 nl2 nl3 nl4
NL1 <- read_html("https://www.regioatlas.nl/indelingen/indelingen_indeling/t/nuts_1_regio_s_landsdelen") %>%
html_nodes("#noord_nederland > div:nth-child(3) > ul:nth-child(2)") %>%
html_text(trim = TRUE) %>%
read_lines() %>%
str_replace_all("\t[\\s]{0,}","")
NL2 <- read_html("https://www.regioatlas.nl/indelingen/indelingen_indeling/t/nuts_1_regio_s_landsdelen") %>%
html_nodes("#oost_nederland > div:nth-child(3) > ul:nth-child(2)") %>%
html_text(trim = TRUE) %>%
read_lines() %>%
str_replace_all("\t[\\s]{0,}","")
NL3 <- read_html("https://www.regioatlas.nl/indelingen/indelingen_indeling/t/nuts_1_regio_s_landsdelen") %>%
html_nodes("#west_nederland > div:nth-child(3) > ul:nth-child(2)") %>%
html_text(trim = TRUE) %>%
read_lines() %>%
str_replace_all("\t[\\s]{0,}","")
NL4 <- read_html("https://www.regioatlas.nl/indelingen/indelingen_indeling/t/nuts_1_regio_s_landsdelen") %>%
html_nodes("#zuid_nederland > div:nth-child(3) > ul:nth-child(2)") %>%
html_text(trim = TRUE) %>%
read_lines() %>%
str_replace_all("\t[\\s]{0,}","")
NUTSlvl1 <-
rbind(
data.frame(municipalite = NL1, NUTS = "NL1"),
data.frame(municipalite = NL2, NUTS = "NL2"),
data.frame(municipalite = NL3, NUTS = "NL3"),
data.frame(municipalite = NL4, NUTS = "NL4")
)
Netherlands <- merge(Netherlands, NUTSlvl1)
Netherlands <- Netherlands %>%
group_by(NUTS, Date) %>%
summarise(montant = sum(montant)) %>%
mutate(Date = dmy(Date))
View(Netherlands)
#Importer les données néerlandaises va un peu plus difficilement: on va garder la date dans une colonne séparée:
Netherlands <- read_html("https://www.rivm.nl/coronavirus-kaart-van-nederland") %>%
html_nodes("#csvData") %>%
html_text() %>%
read_lines() %>%
str_split(";") %>%
unlist()
Netherlands <- Netherlands[-1] %>%
matrix(ncol = 5, byrow = TRUE)
Netherlands <- Netherlands[-(1:2),] %>%
as.data.frame()
date <- read_html("https://www.rivm.nl/coronavirus-kaart-van-nederland") %>%
html_nodes('.with-background > p:nth-child(2)') %>%
html_text() %>%
str_extract("[0-9]{2}\\s[a-z]{1,}\\s[0-9]{4}")
colnames(Netherlands) <- c("numero", "municipalite", "montant", "habitants", "montantparhabitant")
Netherlands <- data.frame(Netherlands, Date = date) %>%
filter(municipalite != "")
write.csv(Netherlands, file = paste("../Data/","netherlands_",date,".csv", sep = ""))
View(Netherlands)
files <- list.files("../Data")
files <- files[grepl("netherlands(.+)", files)]
key <- NULL
Netherlands <- NULL
for (i in files) {
key <- read.csv(paste("../Data/",files, sep = "")) %>%
select(-1)
Netherlands <- rbind(Netherlands, key)
}
Before <- read_excel("../Data/corona_04032020tm16032020.xlsx", sheet = 2)
Before <- Before[!is.na(Before$Gemnr),] %>%
pivot_longer(3:ncol(Before), names_to = "Date", values_to = "montant") %>%
mutate(Date = dmy(str_replace(Date, "Aantal", "")))
colnames(Before) <- c("numero", "municipalite", "Date", "montant")
View(Before)
#Municipalites par province
municipalites <- read_html("https://www.metatopos.eu/Gemtab.php") %>%
html_nodes("section.dikkerand:nth-child(3) > article:nth-child(1) > table:nth-child(2)") %>%
html_table(fill = TRUE, header = TRUE) %>%
data.frame()
NL1 <- read_html("https://www.regioatlas.nl/indelingen/indelingen_indeling/t/nuts_1_regio_s_landsdelen") %>%
html_nodes("#noord_nederland > div:nth-child(3) > ul:nth-child(2)") %>%
html_text(trim = TRUE) %>%
read_lines() %>%
str_replace_all("\t[\\s]{0,}","")
NL2 <- read_html("https://www.regioatlas.nl/indelingen/indelingen_indeling/t/nuts_1_regio_s_landsdelen") %>%
html_nodes("#oost_nederland > div:nth-child(3) > ul:nth-child(2)") %>%
html_text(trim = TRUE) %>%
read_lines() %>%
str_replace_all("\t[\\s]{0,}","")
NL3 <- read_html("https://www.regioatlas.nl/indelingen/indelingen_indeling/t/nuts_1_regio_s_landsdelen") %>%
html_nodes("#west_nederland > div:nth-child(3) > ul:nth-child(2)") %>%
html_text(trim = TRUE) %>%
read_lines() %>%
str_replace_all("\t[\\s]{0,}","")
NL3 <- read_html("https://www.regioatlas.nl/indelingen/indelingen_indeling/t/nuts_1_regio_s_landsdelen") %>%
html_nodes("#west_nederland > div:nth-child(3) > ul:nth-child(2)") %>%
html_text(trim = TRUE) %>%
read_lines() %>%
str_replace_all("\t[\\s]{0,}","")
NL4 <- read_html("https://www.regioatlas.nl/indelingen/indelingen_indeling/t/nuts_1_regio_s_landsdelen") %>%
html_nodes("#zuid_nederland > div:nth-child(3) > ul:nth-child(2)") %>%
html_text(trim = TRUE) %>%
read_lines() %>%
str_replace_all("\t[\\s]{0,}","")
NUTSlvl1 <-
rbind(
data.frame(municipalite = NL1, NUTS = "NL1"),
data.frame(municipalite = NL2, NUTS = "NL2"),
data.frame(municipalite = NL3, NUTS = "NL3"),
data.frame(municipalite = NL4, NUTS = "NL4")
)
View(NUTSlvl1)
#Netherlands <-
merge(Netherlands, NUTSlvl1)
Netherlands <- merge(Netherlands, NUTSlvl1)
Netherlands <- Netherlands %>%
group_by(NUTS, Date) %>%
summarise(montant = sum(montant)) %>%
mutate(Date = dmy(Date))
Before <- Before %>%
merge(NUTSlvl1) %>%
mutate(montant = as.numeric(montant)) %>%
group_by(NUTS, Date) %>%
summarise(montant = sum(montant))
View(Before)
Netherlands <- rbind(Netherlands, Before)
View(Netherlands)
library(readxl)
library(rvest)
library(tidyverse)
library(fuzzyjoin)
library(magrittr)
library(leaflet)
library(lubridate)
library(glogis)
library(gridExtra)
library(kableExtra)
x <- c("ggmap", "rgdal", "rgeos", "maptools", "tmap")
lapply(x, library, character.only = TRUE)
#Ici, il faut choisir la data à laquelle on va construire la carte.
datum <- as.Date("2020-03-17")
#Importer les données françaises via cet URL:
France <- read.csv("https://www.data.gouv.fr/fr/datasets/r/fa9b8fc8-35d5-4e24-90eb-9abe586b0fa5",header = TRUE, check.names = F)
France <- France %>%
pivot_longer(2:ncol(France),
names_to = "departement",
values_to = "montant") %>%
mutate(Date = ymd(Date))
write.csv(France, "../Data/France.csv")
Belgium <- read_html("https://en.wikipedia.org/wiki/2020_coronavirus_pandemic_in_Belgium") %>%
html_nodes(".wikitable") %>%
html_table(fill = TRUE) %>%
data.frame() %>%
select(1,3,5,7)
a <- as.numeric(nrow(Belgium))
Belgium <- Belgium[-c(1,(a),(a-1)),] %>%
mutate(Date = ymd(Date))
colnames(Belgium) <- c("Date", "BE2", "BE1", "BE3")
Belgium <- Belgium %>%
pivot_longer(2:4, names_to = "NUTS_CODE", values_to = "montant")
write.csv(Belgium, "../Data/Belgique.csv")
#Importer les données néerlandaises va un peu plus difficilement: on va garder la date dans une colonne séparée:
Netherlands <- read_html("https://www.rivm.nl/coronavirus-kaart-van-nederland") %>%
html_nodes("#csvData") %>%
html_text() %>%
read_lines() %>%
str_split(";") %>%
unlist()
Netherlands <- Netherlands[-1] %>%
matrix(ncol = 5, byrow = TRUE)
Netherlands <- Netherlands[-(1:2),] %>%
as.data.frame()
date <- read_html("https://www.rivm.nl/coronavirus-kaart-van-nederland") %>%
html_nodes('.with-background > p:nth-child(2)') %>%
html_text() %>%
str_extract("[0-9]{2}\\s[a-z]{1,}\\s[0-9]{4}")
colnames(Netherlands) <- c("numero", "municipalite", "montant", "habitants", "montantparhabitant")
Netherlands <- data.frame(Netherlands, Date = date) %>%
filter(municipalite != "")
write.csv(Netherlands, file = paste("../Data/","netherlands_",date,".csv", sep = ""))
files <- list.files("../Data")
files <- files[grepl("netherlands(.+)", files)]
key <- NULL
Netherlands <- NULL
for (i in files) {
key <- read.csv(paste("../Data/",files, sep = "")) %>%
select(-1)
Netherlands <- rbind(Netherlands, key)
}
files <- list.files("../Data")
files <- files[grepl("netherlands(.+)", files)]
key <- NULL
Netherlands <- NULL
for (i in files) {
key <- read.csv(paste("../Data/",files, sep = "")) %>%
select(-1)
Netherlands <- rbind(Netherlands, key)
}
key <- NULL
Netherlands <- NULL
for (i in files) {
key <- read.csv(paste("../Data/",files[i], sep = "")) %>%
select(-1)
Netherlands <- rbind(Netherlands, key)
}
key <- NULL
Netherlands <- NULL
for (i in files) {
key <- read.csv(paste("../Data/",i, sep = "")) %>%
select(-1)
Netherlands <- rbind(Netherlands, key)
}
View(Netherlands)
View(France)
library(readxl)
library(rvest)
library(tidyverse)
library(fuzzyjoin)
library(magrittr)
library(leaflet)
library(lubridate)
library(glogis)
library(gridExtra)
library(kableExtra)
x <- c("ggmap", "rgdal", "rgeos", "maptools", "tmap")
lapply(x, library, character.only = TRUE)
#Ici, il faut choisir la data à laquelle on va construire la carte.
datum <- as.Date("2020-03-17")
#Importer les données françaises via cet URL:
France <- read.csv("https://www.data.gouv.fr/fr/datasets/r/fa9b8fc8-35d5-4e24-90eb-9abe586b0fa5",header = TRUE, check.names = F)
France <- France %>%
pivot_longer(2:ncol(France),
names_to = "departement",
values_to = "montant") %>%
mutate(Date = ymd(Date))
write.csv(France, "../Data/France.csv")
View(France)
library(readxl)
library(rvest)
library(tidyverse)
library(fuzzyjoin)
library(magrittr)
library(leaflet)
library(lubridate)
library(glogis)
library(gridExtra)
library(kableExtra)
x <- c("ggmap", "rgdal", "rgeos", "maptools", "tmap")
lapply(x, library, character.only = TRUE)
#Ici, il faut choisir la data à laquelle on va construire la carte.
datum <- as.Date("2020-03-17")
#Importer les données françaises via cet URL:
France <- read.csv("https://www.data.gouv.fr/fr/datasets/r/fa9b8fc8-35d5-4e24-90eb-9abe586b0fa5",header = TRUE, check.names = F)
France <- France %>%
pivot_longer(2:ncol(France),
names_to = "departement",
values_to = "montant") %>%
mutate(Date = ymd(Date))
write.csv(France, "../Data/France.csv")
Belgium <- read_html("https://en.wikipedia.org/wiki/2020_coronavirus_pandemic_in_Belgium") %>%
html_nodes(".wikitable") %>%
html_table(fill = TRUE) %>%
data.frame() %>%
select(1,3,5,7)
a <- as.numeric(nrow(Belgium))
Belgium <- Belgium[-c(1,(a),(a-1)),] %>%
mutate(Date = ymd(Date))
colnames(Belgium) <- c("Date", "BE2", "BE1", "BE3")
Belgium <- Belgium %>%
pivot_longer(2:4, names_to = "NUTS_CODE", values_to = "montant")
write.csv(Belgium, "../Data/Belgique.csv")
#Importer les données néerlandaises va un peu plus difficilement: on va garder la date dans une colonne séparée:
Netherlands <- read_html("https://www.rivm.nl/coronavirus-kaart-van-nederland") %>%
html_nodes("#csvData") %>%
html_text() %>%
read_lines() %>%
str_split(";") %>%
unlist()
Netherlands <- Netherlands[-1] %>%
matrix(ncol = 5, byrow = TRUE)
Netherlands <- Netherlands[-(1:2),] %>%
as.data.frame()
date <- read_html("https://www.rivm.nl/coronavirus-kaart-van-nederland") %>%
html_nodes('.with-background > p:nth-child(2)') %>%
html_text() %>%
str_extract("[0-9]{2}\\s[a-z]{1,}\\s[0-9]{4}")
colnames(Netherlands) <- c("numero", "municipalite", "montant", "habitants", "montantparhabitant")
Netherlands <- data.frame(Netherlands, Date = date) %>%
filter(municipalite != "")
write.csv(Netherlands, file = paste("../Data/","netherlands_",date,".csv", sep = ""))
files <- list.files("../Data")
files <- files[grepl("netherlands(.+)", files)]
key <- NULL
Netherlands <- NULL
for (i in files) {
key <- read.csv(paste("../Data/",i, sep = "")) %>%
select(-1)
Netherlands <- rbind(Netherlands, key)
}
Before <- read_excel("../Data/corona_04032020tm16032020.xlsx", sheet = 2)
Before <- Before[!is.na(Before$Gemnr),] %>%
pivot_longer(3:ncol(Before), names_to = "Date", values_to = "montant") %>%
mutate(Date = dmy(str_replace(Date, "Aantal", "")))
colnames(Before) <- c("numero", "municipalite", "Date", "montant")
#Municipalites par province
municipalites <- read_html("https://www.metatopos.eu/Gemtab.php") %>%
html_nodes("section.dikkerand:nth-child(3) > article:nth-child(1) > table:nth-child(2)") %>%
html_table(fill = TRUE, header = TRUE) %>%
data.frame()
#municipalites par nl1 nl2 nl3 nl4
NL1 <- read_html("https://www.regioatlas.nl/indelingen/indelingen_indeling/t/nuts_1_regio_s_landsdelen") %>%
html_nodes("#noord_nederland > div:nth-child(3) > ul:nth-child(2)") %>%
html_text(trim = TRUE) %>%
read_lines() %>%
str_replace_all("\t[\\s]{0,}","")
NL2 <- read_html("https://www.regioatlas.nl/indelingen/indelingen_indeling/t/nuts_1_regio_s_landsdelen") %>%
html_nodes("#oost_nederland > div:nth-child(3) > ul:nth-child(2)") %>%
html_text(trim = TRUE) %>%
read_lines() %>%
str_replace_all("\t[\\s]{0,}","")
NL3 <- read_html("https://www.regioatlas.nl/indelingen/indelingen_indeling/t/nuts_1_regio_s_landsdelen") %>%
html_nodes("#west_nederland > div:nth-child(3) > ul:nth-child(2)") %>%
html_text(trim = TRUE) %>%
read_lines() %>%
str_replace_all("\t[\\s]{0,}","")
NL4 <- read_html("https://www.regioatlas.nl/indelingen/indelingen_indeling/t/nuts_1_regio_s_landsdelen") %>%
html_nodes("#zuid_nederland > div:nth-child(3) > ul:nth-child(2)") %>%
html_text(trim = TRUE) %>%
read_lines() %>%
str_replace_all("\t[\\s]{0,}","")
NUTSlvl1 <-
rbind(
data.frame(municipalite = NL1, NUTS = "NL1"),
data.frame(municipalite = NL2, NUTS = "NL2"),
data.frame(municipalite = NL3, NUTS = "NL3"),
data.frame(municipalite = NL4, NUTS = "NL4")
)
Netherlands <- merge(Netherlands, NUTSlvl1)
Netherlands <- Netherlands %>%
group_by(NUTS, Date) %>%
summarise(montant = sum(montant)) %>%
mutate(Date = dmy(Date))
Before <- Before %>%
merge(NUTSlvl1) %>%
mutate(montant = as.numeric(montant)) %>%
group_by(NUTS, Date) %>%
summarise(montant = sum(montant))
Netherlands <- rbind(Netherlands, Before)
Belgium <- Belgium %>%
mutate(montant = as.numeric(montant)) %>%
group_by(NUTS_CODE, Date) %>%
summarise(montant = sum(montant))
conversion <- data.frame(
departement = unique(France$departement),
NUTS_CODE = c("FRK", "FRC", "FRH", "FRB", "FRM",
"FRF", "FRE", "FR1", "FRD", "FRI",
"FRJ", "FRG", "FRL", "FRY", "FRY",
"FRY", "FRY", "FRY", "FRY", "FRY"))
write.csv(conversion, "../Data/conversion.csv")
#Grand Est est Alsace-Champagne-Ardenne-Lorraine est FRF
#Hauts-de-France est Nord-pas-de-Calais-Picardy est FRE
#Occitanie est LANGUEDOC-ROUSSILLON-MIDI-PYRÉNÉES est FRJ
France <- France %>%
merge(conversion) %>%
group_by(NUTS_CODE, Date) %>%
summarise(montant = sum(montant))
write.csv(Netherlands, "../Data/Shiny_nl.csv")
write.csv(Belgium, "../Data/Shiny_be.csv")
write.csv(France, "../Data/Shiny_fr.csv")
countries <- list(Netherlands, Belgium, France) %>%
lapply(filter, Date == datum)
Netherlands <- countries[[1]]
Belgium <- countries[[2]]
France <- countries[[3]]
#La fusion de France et des Pays-Bas
Europe <- readOGR(layer = "NUTS_RG_03M_2016_3035_LEVL_1",
dsn = "../Data")
Europe <- sp::merge(Europe, Netherlands, by.x = "NUTS_ID", by.y = "NUTS")
Europe <- sp::merge(Europe, France, by.x = "NUTS_ID", by.y = "NUTS_CODE")
Europe@data <- Europe@data %>%
mutate(montant = ifelse(is.na(montant.x), montant.y, montant.x)) %>%
select(-montant.x, -montant.y)
#Ajouter la Belgique
Europe <- sp::merge(Europe, Belgium, by.x = "NUTS_ID", by.y = "NUTS_CODE")
Europe@data <- Europe@data %>%
mutate(montant = ifelse(is.na(montant.x), montant.y, montant.x)) %>%
select(-montant.x, -montant.y)
m1 <- tm_shape(Europe) + tm_polygons(col = "montant",
palette = "viridis",
showNA = FALSE,
breaks = c(0,50,100,200,500,1000,Inf))
m2 <- tmap_leaflet(m1)
setView(m2, 4.8945, 52.3667, zoom = 5)
